# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        sdk: [stable]
    steps:
      - uses: actions/checkout@v3
      # - uses: dart-lang/setup-dart@v1
      #   with:
      #     sdk: ${{ matrix.sdk }}
          # cache: dart

      # - name: Dart version
      #   run: dart --version
      # - name: Install dependencies
      #   run: dart pub get
      # - name: Check formatting
      #   run: dart format --output=none --set-exit-if-changed .
      # - name: Analyze code
      #   run: dart analyze
      # - name: Run tests
      #   run: dart test

      # - name: Files
      #   run: ls
      # - name: Create key pem
      #   run: echo ${{ secrets.PEM_KEY }} > key.pem 
      #   # chmod 400 key.pem
      # - name: Connect AWS
      #   run: ssh -i "key.pem" ${{ secrets.UBUNTU }} 

      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} 
          '
            ls
            cd onde_gastei_api
            ls
          ' 
     

  # flutter:
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       # flutter-version: '3.0.5'
  #       channel: 'stable'
  #   - run: flutter --version